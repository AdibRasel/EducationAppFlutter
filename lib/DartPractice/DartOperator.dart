void DartOperator() {
  // গণিত অপারেটর
  int a = 10;
  int b = 5;

  print('গণিত অপারেটর:');
  print('a + b = ${a + b}'); // যোগ
  print('a - b = ${a - b}'); // বিয়োগ
  print('a * b = ${a * b}'); // গুন
  print('a / b = ${a / b}'); // ভাগ
  print('a % b = ${a % b}'); // ভাগশেষ
  print('a ~/ b = ${a ~/ b}'); // পূর্ণসংখ্যা ভাগ

  // তুলনা অপারেটর
  print('\nতুলনা অপারেটর:');
  print('a == b: ${a == b}'); // সমান
  print('a != b: ${a != b}'); // অসমান
  print('a > b: ${a > b}'); // বড়
  print('a < b: ${a < b}'); // ছোট
  print('a >= b: ${a >= b}'); // বড় বা সমান
  print('a <= b: ${a <= b}'); // ছোট বা সমান

  // যৌক্তিক অপারেটর
  bool x = true;
  bool y = false;

  print('\nযৌক্তিক অপারেটর:');
  print('x && y: ${x && y}'); // এবং
  print('x || y: ${x || y}'); // অথবা
  print('!x: ${!x}'); // না

  // বিটওয়াইজ অপারেটর
  int m = 6;  // 110
  int n = 3;  // 011

  print('\nবিটওয়াইজ অপারেটর:');
  print('m & n: ${m & n}'); // বিটওয়াইজ এবং
  print('m | n: ${m | n}'); // বিটওয়াইজ অথবা
  print('m ^ n: ${m ^ n}'); // বিটওয়াইজ XOR
  print('~m: ${~m}'); // বিটওয়াইজ NOT

  // শিফট অপারেটর
  int p = 8; // 1000

  print('\nশিফট অপারেটর:');
  print('p << 1: ${p << 1}'); // বাম শিফট
  print('p >> 1: ${p >> 1}'); // ডান শিফট

  // অ্যাসাইনমেন্ট অপারেটর
  int c = 10;

  print('\nঅ্যাসাইনমেন্ট অপারেটর:');
  c += 5; // c = c + 5
  print('c += 5: $c');
  c -= 3; // c = c - 3
  print('c -= 3: $c');
  c *= 2; // c = c * 2
  print('c *= 2: $c');
  c ~/= 4; // c = c ~/ 4
  print('c ~/= 4: $c');
  c %= 3; // c = c % 3
  print('c %= 3: $c');



}
